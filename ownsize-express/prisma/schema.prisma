generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int         @id(map: "user_pk") @unique(map: "user_id_uindex") @default(autoincrement())
  name      String?     @db.VarChar(10)
  email     String?     @db.VarChar(50)
  userImage String?     @db.VarChar(500)
  AllCloset AllCloset[]
  Recommend Recommend[]
}

model AllCloset {
  id                 Int                  @id(map: "Archive_pkey") @unique(map: "Archive_id_key") @default(autoincrement())
  userId             Int                  @default(autoincrement())
  image              String?              @db.VarChar(500)
  productName        String?              @db.VarChar(36)
  size               String?              @db.VarChar(10)
  memo               String?              @db.VarChar(50)
  isRecommend        Boolean?
  isPin              Boolean?
  mallName           String?              @db.VarChar(50)
  topOrBottom        Int?
  productUrl         String?              @db.VarChar(500)
  faviconUrl         String?              @db.VarChar(500)
  isInPin            Boolean?
  User               User                 @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "allcloset_user_id_fk")
  AllCloset_Category AllCloset_Category[]
}

model AllSizeBottom {
  id              Int      @id @unique @default(autoincrement())
  size            String?  @db.VarChar(10)
  bottomLength    Int?
  waist           Int?
  thigh           Int?
  rise            Int?
  hem             Int?
  isWidthOfBottom Boolean?
  isManual        Boolean?
  topOrBottom     Boolean?
}

model AllSizeTop {
  id           Int      @id @unique @default(autoincrement())
  size         String?  @db.VarChar(10)
  topLength    Int?
  shoulder     Int?
  chest        Int?
  isWidthOfTop Boolean?
  isManual     Boolean?
  topOrBottom  Boolean?
}

model MySize {
  id              Int      @id @unique @default(autoincrement())
  userId          Int      @default(autoincrement())
  topLength       Int?
  shoulder        Int?
  chest           Int?
  isWidthOfTop    Boolean?
  bottomLength    Int?
  waist           Int?
  thigh           Int?
  rise            Int?
  hem             Int?
  isWidthOfBottom Boolean?
}

model Category {
  id                 Int                  @id @unique @default(autoincrement())
  categoryName       String?              @db.VarChar(20)
  isPinCategory      Boolean?
  image              String[]             @db.VarChar
  AllCloset_Category AllCloset_Category[]
}

model AllCloset_Category {
  id         Int       @id @unique @default(autoincrement())
  productId  Int       @default(autoincrement())
  categoryId Int       @default(autoincrement())
  AllCloset  AllCloset @relation(fields: [productId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "allcloset_category_allcloset_id_fk")
  Category   Category  @relation(fields: [categoryId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "allcloset_category_category_id_fk")
}

model Recommend {
  id            Int     @id @unique @default(autoincrement())
  userId        Int     @default(autoincrement())
  url           String? @db.VarChar(200)
  recommendSize String? @db.VarChar(10)
  User          User    @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "recommend_user_id_fk")
}
