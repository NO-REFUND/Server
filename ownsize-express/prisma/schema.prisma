generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int         @id(map: "user_pk") @unique(map: "user_id_uindex") @default(autoincrement())
  name       String?     @db.VarChar(10)
  email      String?     @db.VarChar(50)
  AllCloset  AllCloset[]
  BottomSize BottomSize?
  TopSize    TopSize?
}

model AllCloset {
  id          Int      @id(map: "Archive_pkey") @unique(map: "Archive_id_key") @default(autoincrement())
  userId      Int      @default(autoincrement())
  image       String?  @db.VarChar(500)
  productName String?  @db.VarChar(20)
  size        String?  @db.VarChar(10)
  link        String?  @db.VarChar(200)
  memo        String?  @db.VarChar(500)
  isRecommend Boolean?
  isPin       Boolean?
  mallName    String?  @db.VarChar(50)
  User        User     @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "archive_user_id_fk")
}

model AllSizeBottom {
  id     Int     @id @unique @default(autoincrement())
  size   String? @db.VarChar(10)
  length Int?
  waist  Int?
  thigh  Int?
  rise   Int?
}

model AllSizeTop {
  id       Int     @id @unique @default(autoincrement())
  size     String? @db.VarChar(10)
  length   Int?
  shoulder Int?
  chest    Int?
}

model BottomSize {
  id     Int  @id @unique @default(autoincrement())
  userId Int  @unique @default(autoincrement())
  length Int?
  waist  Int?
  thigh  Int?
  rise   Int?
  User   User @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "bottomsize_user_id_fk")
}

model TopSize {
  id       Int  @id @unique @default(autoincrement())
  userId   Int  @unique @default(autoincrement())
  length   Int?
  shoulder Int?
  chest    Int?
  User     User @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "topsize_user_id_fk")
}
